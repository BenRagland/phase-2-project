{"ast":null,"code":"var _jsxFileName = \"/Users/spencerbrown/Development/code/phase-2/phase-2-project/src/Components/DietJournal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DietJournal() {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const [allMeals, setAllMeals] = useState([]);\n  const [showEntries, setShowEntries] = useState(false);\n  const categories = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\n\n  // Fetch all meals from the API\n  useEffect(() => {\n    fetchAllMeals();\n  }, []);\n  const fetchAllMeals = async () => {\n    try {\n      const response = await fetch('https://api.edamam.com/api/recipes/v2?type=any&beta=true&app_id=d0e6a50c&app_key=4039c21decd06beb5d8e7382c1d3dde0%09%E2%80%94%09');\n      if (!response.ok) {\n        throw new Error('Failed to fetch meals');\n      }\n      const data = await response.json();\n      const meals = data.hits.map(hit => hit.recipe.label);\n      setAllMeals(meals);\n    } catch (error) {\n      console.error('Error fetching meals:', error.message);\n    }\n  };\n  const handleEntrySubmit = async event => {\n    event.preventDefault();\n    const form = event.target;\n    const formData = new FormData(form);\n    const newEntry = {};\n    formData.forEach((value, key) => {\n      newEntry[key] = value;\n    });\n    newEntry.dateSubmitted = new Date().toLocaleDateString();\n    newEntry.timeSubmitted = new Date().toLocaleTimeString();\n    try {\n      const response = await fetch('http://localhost:3000/dietJournalEntries', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newEntry)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to submit entry');\n      }\n      console.log('Entry submitted successfully');\n      setEntries([...entries, newEntry]);\n      form.reset(); // Clear input fields after submission\n    } catch (error) {\n      console.error('Error submitting entry:', error.message);\n    }\n  };\n  const toggleShowEntries = () => {\n    setShowEntries(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '650px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleShowEntries,\n        children: \"Diet Journal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), showEntries && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEntrySubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"meal\",\n            placeholder: \"Meal\",\n            list: \"mealSuggestions\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"mealSuggestions\",\n            children: allMeals.map((meal, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: meal\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"calories\",\n            placeholder: \"Calories\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this), categories.map((category, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category,\n              children: category\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), entries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Today's Entries:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: entries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [entry.meal, \" - \", entry.calories, \" calories - \", entry.category]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(DietJournal, \"LQyzH9TEtnKIt8Ih2RRxhpcSjoI=\");\n_c = DietJournal;\nexport default DietJournal;\nvar _c;\n$RefreshReg$(_c, \"DietJournal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DietJournal","_s","entries","setEntries","allMeals","setAllMeals","showEntries","setShowEntries","categories","fetchAllMeals","response","fetch","ok","Error","data","json","meals","hits","map","hit","recipe","label","error","console","message","handleEntrySubmit","event","preventDefault","form","target","formData","FormData","newEntry","forEach","value","key","dateSubmitted","Date","toLocaleDateString","timeSubmitted","toLocaleTimeString","method","headers","body","JSON","stringify","log","reset","toggleShowEntries","prevState","style","maxWidth","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","marginBottom","type","name","placeholder","list","required","id","meal","i","category","length","entry","index","calories","_c","$RefreshReg$"],"sources":["/Users/spencerbrown/Development/code/phase-2/phase-2-project/src/Components/DietJournal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction DietJournal() {\n    const [entries, setEntries] = useState([]);\n    const [allMeals, setAllMeals] = useState([]);\n    const [showEntries, setShowEntries] = useState(false);\n    const categories = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\n\n    // Fetch all meals from the API\n    useEffect(() => {\n        fetchAllMeals();\n    }, []);\n\n    const fetchAllMeals = async () => {\n        try {\n            const response = await fetch('https://api.edamam.com/api/recipes/v2?type=any&beta=true&app_id=d0e6a50c&app_key=4039c21decd06beb5d8e7382c1d3dde0%09%E2%80%94%09');\n            if (!response.ok) {\n                throw new Error('Failed to fetch meals');\n            }\n            const data = await response.json();\n            const meals = data.hits.map(hit => hit.recipe.label);\n            setAllMeals(meals);\n        } catch (error) {\n            console.error('Error fetching meals:', error.message);\n        }\n    };\n\n    const handleEntrySubmit = async (event) => {\n        event.preventDefault();\n        const form = event.target;\n        const formData = new FormData(form);\n        const newEntry = {};\n        formData.forEach((value, key) => {\n            newEntry[key] = value;\n        });\n        newEntry.dateSubmitted = new Date().toLocaleDateString();\n        newEntry.timeSubmitted = new Date().toLocaleTimeString();\n\n        try {\n            const response = await fetch('http://localhost:3000/dietJournalEntries', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(newEntry),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to submit entry');\n            }\n\n            console.log('Entry submitted successfully');\n            setEntries([...entries, newEntry]);\n            form.reset(); // Clear input fields after submission\n        } catch (error) {\n            console.error('Error submitting entry:', error.message);\n        }\n    };\n\n    const toggleShowEntries = () => {\n        setShowEntries(prevState => !prevState);\n    };\n\n    return (\n        <div style={{ maxWidth: '650px' }}>\n            <h5>\n                <button onClick={toggleShowEntries}>Diet Journal</button>\n            </h5>\n            {showEntries && (\n                <div>\n                    <form onSubmit={handleEntrySubmit}>\n                        <div style={{ marginBottom: '10px' }}>\n                            <input type=\"text\" name=\"meal\" placeholder=\"Meal\" list=\"mealSuggestions\" required />\n                            <datalist id=\"mealSuggestions\">\n                                {allMeals.map((meal, i) => (\n                                    <option key={i} value={meal} />\n                                ))}\n                            </datalist>\n                        </div>\n                        <div style={{ marginBottom: '10px' }}>\n                            <input type=\"number\" name=\"calories\" placeholder=\"Calories\" required />\n                        </div>\n                        <div style={{ marginBottom: '10px' }}>\n                            <select name=\"category\" required>\n                                <option value=\"\">Select Category</option>\n                                {categories.map((category, i) => (\n                                    <option key={i} value={category}>\n                                        {category}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                        <div>\n                            <button type=\"submit\">Submit</button>\n                        </div>\n                    </form>\n                    {entries.length > 0 && (\n                        <div>\n                            <h6>Today's Entries:</h6>\n                            <ul>\n                                {entries.map((entry, index) => (\n                                    <li key={index}>\n                                        {entry.meal} - {entry.calories} calories - {entry.category}\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default DietJournal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMY,UAAU,GAAG,CAAC,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC;;EAE5D;EACAX,SAAS,CAAC,MAAM;IACZY,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kIAAkI,CAAC;MAChK,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,MAAMC,KAAK,GAAGF,IAAI,CAACG,IAAI,CAACC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,MAAM,CAACC,KAAK,CAAC;MACpDhB,WAAW,CAACW,KAAK,CAAC;IACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACzD;EACJ,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAOC,KAAK,IAAK;IACvCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAM;IACzB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACH,IAAI,CAAC;IACnC,MAAMI,QAAQ,GAAG,CAAC,CAAC;IACnBF,QAAQ,CAACG,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;MAC7BH,QAAQ,CAACG,GAAG,CAAC,GAAGD,KAAK;IACzB,CAAC,CAAC;IACFF,QAAQ,CAACI,aAAa,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;IACxDN,QAAQ,CAACO,aAAa,GAAG,IAAIF,IAAI,CAAC,CAAC,CAACG,kBAAkB,CAAC,CAAC;IAExD,IAAI;MACA,MAAM9B,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;QACrE8B,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,QAAQ;MACjC,CAAC,CAAC;MAEF,IAAI,CAACtB,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC7C;MAEAU,OAAO,CAACuB,GAAG,CAAC,8BAA8B,CAAC;MAC3C3C,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE8B,QAAQ,CAAC,CAAC;MAClCJ,IAAI,CAACmB,KAAK,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOzB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC3D;EACJ,CAAC;EAED,MAAMwB,iBAAiB,GAAGA,CAAA,KAAM;IAC5BzC,cAAc,CAAC0C,SAAS,IAAI,CAACA,SAAS,CAAC;EAC3C,CAAC;EAED,oBACIlD,OAAA;IAAKmD,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC9BrD,OAAA;MAAAqD,QAAA,eACIrD,OAAA;QAAQsD,OAAO,EAAEL,iBAAkB;QAAAI,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,EACJnD,WAAW,iBACRP,OAAA;MAAAqD,QAAA,gBACIrD,OAAA;QAAM2D,QAAQ,EAAEjC,iBAAkB;QAAA2B,QAAA,gBAC9BrD,OAAA;UAAKmD,KAAK,EAAE;YAAES,YAAY,EAAE;UAAO,CAAE;UAAAP,QAAA,gBACjCrD,OAAA;YAAO6D,IAAI,EAAC,MAAM;YAACC,IAAI,EAAC,MAAM;YAACC,WAAW,EAAC,MAAM;YAACC,IAAI,EAAC,iBAAiB;YAACC,QAAQ;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpF1D,OAAA;YAAUkE,EAAE,EAAC,iBAAiB;YAAAb,QAAA,EACzBhD,QAAQ,CAACc,GAAG,CAAC,CAACgD,IAAI,EAAEC,CAAC,kBAClBpE,OAAA;cAAgBmC,KAAK,EAAEgC;YAAK,GAAfC,CAAC;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAgB,CACjC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACN1D,OAAA;UAAKmD,KAAK,EAAE;YAAES,YAAY,EAAE;UAAO,CAAE;UAAAP,QAAA,eACjCrD,OAAA;YAAO6D,IAAI,EAAC,QAAQ;YAACC,IAAI,EAAC,UAAU;YAACC,WAAW,EAAC,UAAU;YAACE,QAAQ;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtE,CAAC,eACN1D,OAAA;UAAKmD,KAAK,EAAE;YAAES,YAAY,EAAE;UAAO,CAAE;UAAAP,QAAA,eACjCrD,OAAA;YAAQ8D,IAAI,EAAC,UAAU;YAACG,QAAQ;YAAAZ,QAAA,gBAC5BrD,OAAA;cAAQmC,KAAK,EAAC,EAAE;cAAAkB,QAAA,EAAC;YAAe;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACxCjD,UAAU,CAACU,GAAG,CAAC,CAACkD,QAAQ,EAAED,CAAC,kBACxBpE,OAAA;cAAgBmC,KAAK,EAAEkC,QAAS;cAAAhB,QAAA,EAC3BgB;YAAQ,GADAD,CAAC;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEN,CACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eACN1D,OAAA;UAAAqD,QAAA,eACIrD,OAAA;YAAQ6D,IAAI,EAAC,QAAQ;YAAAR,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,EACNvD,OAAO,CAACmE,MAAM,GAAG,CAAC,iBACftE,OAAA;QAAAqD,QAAA,gBACIrD,OAAA;UAAAqD,QAAA,EAAI;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzB1D,OAAA;UAAAqD,QAAA,EACKlD,OAAO,CAACgB,GAAG,CAAC,CAACoD,KAAK,EAAEC,KAAK,kBACtBxE,OAAA;YAAAqD,QAAA,GACKkB,KAAK,CAACJ,IAAI,EAAC,KAAG,EAACI,KAAK,CAACE,QAAQ,EAAC,cAAY,EAACF,KAAK,CAACF,QAAQ;UAAA,GADrDG,KAAK;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACxD,EAAA,CA9GQD,WAAW;AAAAyE,EAAA,GAAXzE,WAAW;AAgHpB,eAAeA,WAAW;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}