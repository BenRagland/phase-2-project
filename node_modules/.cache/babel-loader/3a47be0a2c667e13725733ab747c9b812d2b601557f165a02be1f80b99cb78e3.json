{"ast":null,"code":"var _jsxFileName = \"/Users/spencerbrown/Development/code/phase-2/phase-2-project/src/Components/DietJournal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DietJournal() {\n  _s();\n  const [entries, setEntries] = useState(Array.from({\n    length: 15\n  }, () => ({\n    meal: '',\n    calories: '',\n    category: '',\n    favorite: false,\n    period: 'AM'\n  })));\n  const [allMeals, setAllMeals] = useState([]); // State to store all meals from the API\n  const categories = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\n\n  // Fetch all meals from the API\n  useEffect(() => {\n    fetchAllMeals();\n  }, []);\n  const fetchAllMeals = async () => {\n    try {\n      const response = await fetch('https://api.edamam.com/api/recipes/v2?type=any&beta=true&app_id=d0e6a50c&app_key=4039c21decd06beb5d8e7382c1d3dde0%09%E2%80%94%09');\n      if (!response.ok) {\n        throw new Error('Failed to fetch meals');\n      }\n      const data = await response.json();\n      // Assuming data contains the recipes\n      const meals = data.hits.map(hit => hit.recipe.label);\n      setAllMeals(meals); // Set the retrieved meals in state\n    } catch (error) {\n      console.error('Error fetching meals:', error.message);\n    }\n  };\n  const handleEntryChange = (index, event) => {\n    const {\n      name,\n      value\n    } = event.target;\n    let updatedEntries = [...entries];\n    if (name === \"meal\") {\n      // Find the meal label in allMeals\n      const selectedMeal = value;\n      updatedEntries[index] = {\n        ...updatedEntries[index],\n        [name]: value\n      };\n      // Assuming there's no direct way to get calories from the API\n      updatedEntries[index].calories = ''; // Clear calories for now\n    } else {\n      updatedEntries[index] = {\n        ...updatedEntries[index],\n        [name]: value\n      };\n    }\n    setEntries(updatedEntries);\n  };\n  const handleFavoriteChange = index => {\n    setEntries(prevEntries => {\n      const updatedEntries = [...prevEntries];\n      updatedEntries[index] = {\n        ...updatedEntries[index],\n        favorite: !updatedEntries[index].favorite\n      };\n      return updatedEntries;\n    });\n  };\n  const submitEntry = index => {\n    const entry = {\n      ...entries[index]\n    };\n    entry.dateSubmitted = new Date().toLocaleDateString(); // Current date\n    entry.timeSubmitted = new Date().toLocaleTimeString(); // Current time\n\n    try {\n      const response = fetch('http://localhost:3000/dietJournalEntries', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(entry)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to submit entry');\n      }\n      console.log('Entry submitted successfully');\n    } catch (error) {\n      console.error('Error submitting entry:', error.message);\n    }\n  };\n  const removeEntry = index => {\n    setEntries(prevEntries => prevEntries.filter((_, i) => i !== index));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '750px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Diet Journal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxHeight: '250px',\n        overflowY: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse',\n          borderSpacing: '0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '5px'\n              },\n              children: \"Meal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '5px'\n              },\n              children: \"Calories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '5px'\n              },\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '5px'\n              },\n              children: \"Fav\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '5px'\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '5px'\n              },\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: entries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '5px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"meal\",\n                value: entry.meal,\n                onChange: event => handleEntryChange(index, event),\n                list: \"mealSuggestions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                id: \"mealSuggestions\",\n                children: allMeals.map((meal, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: meal\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '5px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"calories\",\n                value: entry.calories,\n                maxWidth: \"10px\",\n                onChange: event => handleEntryChange(index, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '5px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"category\",\n                value: entry.category,\n                onChange: event => handleEntryChange(index, event),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 41\n                }, this), categories.map((category, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: category,\n                  children: category\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 45\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '5px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: entry.favorite,\n                onChange: () => handleFavoriteChange(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '5px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => submitEntry(index),\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '5px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeEntry(index),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s(DietJournal, \"6KNzXVU490tSuQsorFcLD037Kto=\");\n_c = DietJournal;\nexport default DietJournal;\nvar _c;\n$RefreshReg$(_c, \"DietJournal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DietJournal","_s","entries","setEntries","Array","from","length","meal","calories","category","favorite","period","allMeals","setAllMeals","categories","fetchAllMeals","response","fetch","ok","Error","data","json","meals","hits","map","hit","recipe","label","error","console","message","handleEntryChange","index","event","name","value","target","updatedEntries","selectedMeal","handleFavoriteChange","prevEntries","submitEntry","entry","dateSubmitted","Date","toLocaleDateString","timeSubmitted","toLocaleTimeString","method","headers","body","JSON","stringify","log","removeEntry","filter","_","i","style","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","maxHeight","overflowY","width","borderCollapse","borderSpacing","padding","type","onChange","list","id","checked","onClick","_c","$RefreshReg$"],"sources":["/Users/spencerbrown/Development/code/phase-2/phase-2-project/src/Components/DietJournal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction DietJournal() {\n    const [entries, setEntries] = useState(Array.from({ length: 15 }, () => ({ meal: '', calories: '', category: '', favorite: false, period: 'AM' })));\n    const [allMeals, setAllMeals] = useState([]); // State to store all meals from the API\n    const categories = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\n\n    // Fetch all meals from the API\n    useEffect(() => {\n        fetchAllMeals();\n    }, []);\n\n    const fetchAllMeals = async () => {\n        try {\n            const response = await fetch('https://api.edamam.com/api/recipes/v2?type=any&beta=true&app_id=d0e6a50c&app_key=4039c21decd06beb5d8e7382c1d3dde0%09%E2%80%94%09');\n            if (!response.ok) {\n                throw new Error('Failed to fetch meals');\n            }\n            const data = await response.json();\n            // Assuming data contains the recipes\n            const meals = data.hits.map(hit => hit.recipe.label);\n            setAllMeals(meals); // Set the retrieved meals in state\n        } catch (error) {\n            console.error('Error fetching meals:', error.message);\n        }\n    };\n\n    const handleEntryChange = (index, event) => {\n        const { name, value } = event.target;\n        let updatedEntries = [...entries];\n        if (name === \"meal\") {\n            // Find the meal label in allMeals\n            const selectedMeal = value;\n            updatedEntries[index] = { ...updatedEntries[index], [name]: value };\n            // Assuming there's no direct way to get calories from the API\n            updatedEntries[index].calories = ''; // Clear calories for now\n        } else {\n            updatedEntries[index] = { ...updatedEntries[index], [name]: value };\n        }\n        setEntries(updatedEntries);\n    };\n\n    const handleFavoriteChange = (index) => {\n        setEntries(prevEntries => {\n            const updatedEntries = [...prevEntries];\n            updatedEntries[index] = { ...updatedEntries[index], favorite: !updatedEntries[index].favorite };\n            return updatedEntries;\n        });\n    };\n\n    const submitEntry = (index) => {\n        const entry = { ...entries[index] };\n        entry.dateSubmitted = new Date().toLocaleDateString(); // Current date\n        entry.timeSubmitted = new Date().toLocaleTimeString(); // Current time\n\n        try {\n            const response = fetch('http://localhost:3000/dietJournalEntries', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(entry),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to submit entry');\n            }\n\n            console.log('Entry submitted successfully');\n        } catch (error) {\n            console.error('Error submitting entry:', error.message);\n        }\n    };\n\n    const removeEntry = (index) => {\n        setEntries(prevEntries => prevEntries.filter((_, i) => i !== index));\n    };\n\n    return (\n        <div style={{ maxWidth: '750px' }}>\n            <h5>Diet Journal</h5>\n            <div style={{ maxHeight: '250px', overflowY: 'auto' }}>\n                <table style={{ width: '100%', borderCollapse: 'collapse', borderSpacing: '0' }}>\n                    <thead>\n                        <tr>\n                            <th style={{ padding: '5px' }}>Meal</th>\n                            <th style={{ padding: '5px' }}>Calories</th>\n                            <th style={{ padding: '5px' }}>Category</th>\n                            <th style={{ padding: '5px' }}>Fav</th>\n                            <th style={{ padding: '5px' }}>Submit</th>\n                            <th style={{ padding: '5px' }}>Remove</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {entries.map((entry, index) => (\n                            <tr key={index}>\n                                <td style={{ padding: '5px' }}>\n                                    <input\n                                        type=\"text\"\n                                        name=\"meal\"\n                                        value={entry.meal}\n                                        onChange={(event) => handleEntryChange(index, event)}\n                                        list=\"mealSuggestions\"\n                                    />\n                                    {/* Display suggestions as the user types */}\n                                    <datalist id=\"mealSuggestions\">\n                                        {allMeals.map((meal, i) => (\n                                            <option key={i} value={meal} />\n                                        ))}\n                                    </datalist>\n                                </td>\n                                <td style={{ padding: '5px'}}>\n                                    <input\n                                        type=\"number\"\n                                        name=\"calories\"\n                                        value={entry.calories}\n                                        maxWidth='10px'\n                                        onChange={(event) => handleEntryChange(index, event)}\n                                    />\n                                </td>\n                                <td style={{ padding: '5px' }}>\n                                    <select\n                                        name=\"category\"\n                                        value={entry.category}\n                                        onChange={(event) => handleEntryChange(index, event)}\n                                    >\n                                        <option value=\"\">Select Category</option>\n                                        {categories.map((category, i) => (\n                                            <option key={i} value={category}>\n                                                {category}\n                                            </option>\n                                        ))}\n                                    </select>\n                                </td>\n                                <td style={{ padding: '5px' }}>\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={entry.favorite}\n                                        onChange={() => handleFavoriteChange(index)}\n                                    />\n                                </td>\n                                \n                                <td style={{ padding: '5px' }}>\n                                    <button onClick={() => submitEntry(index)}>Submit</button>\n                                </td>\n                                <td style={{ padding: '5px' }}>\n                                    <button onClick={() => removeEntry(index)}>Remove</button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default DietJournal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}