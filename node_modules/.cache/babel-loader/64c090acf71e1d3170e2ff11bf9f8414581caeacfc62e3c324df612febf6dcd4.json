{"ast":null,"code":"var _jsxFileName = \"/Users/spencerbrown/Development/code/phase-2/phase-2-project/src/Components/DietJournal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DietJournal() {\n  _s();\n  const [entries, setEntries] = useState(() => {\n    const storedEntries = localStorage.getItem('dietEntries');\n    return storedEntries ? JSON.parse(storedEntries) : Array.from({\n      length: 15\n    }, () => ({\n      meal: '',\n      calories: '',\n      category: '',\n      favorite: false,\n      period: 'AM'\n    }));\n  });\n  const [allMeals, setAllMeals] = useState([]); // State to store all meals from the API\n  const categories = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\n\n  // Fetch all meals from the API\n  useEffect(() => {\n    fetchAllMeals();\n  }, []);\n  const fetchAllMeals = async () => {\n    try {\n      const response = await fetch('https://api.edamam.com/api/recipes/v2?type=any&beta=true&app_id=d0e6a50c&app_key=4039c21decd06beb5d8e7382c1d3dde0%09%E2%80%94%09');\n      if (!response.ok) {\n        throw new Error('Failed to fetch meals');\n      }\n      const data = await response.json();\n      // Assuming data contains the recipes\n      const meals = data.hits.map(hit => hit.recipe.label);\n      setAllMeals(meals); // Set the retrieved meals in state\n    } catch (error) {\n      console.error('Error fetching meals:', error.message);\n    }\n  };\n  const handleEntryChange = (index, event) => {\n    const {\n      name,\n      value\n    } = event.target;\n    let updatedEntries = [...entries];\n    if (name === \"meal\") {\n      // Find the meal label in allMeals\n      const selectedMeal = value;\n      updatedEntries[index] = {\n        ...updatedEntries[index],\n        [name]: value\n      };\n      // Assuming there's no direct way to get calories from the API\n      updatedEntries[index].calories = ''; // Clear calories for now\n    } else {\n      updatedEntries[index] = {\n        ...updatedEntries[index],\n        [name]: value\n      };\n    }\n    setEntries(updatedEntries);\n  };\n  const submitEntry = index => {\n    const entry = {\n      ...entries[index]\n    };\n    entry.dateSubmitted = new Date().toLocaleDateString(); // Current date\n    entry.timeSubmitted = new Date().toLocaleTimeString(); // Current time\n\n    try {\n      const response = fetch('http://localhost:3000/dietJournalEntries', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(entry)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to submit entry');\n      }\n      console.log('Entry submitted successfully');\n    } catch (error) {\n      console.error('Error submitting entry:', error.message);\n    }\n  };\n  const removeEntry = index => {\n    setEntries(prevEntries => prevEntries.filter((_, i) => i !== index));\n  };\n\n  // Clear entries at the beginning of each day\n  useEffect(() => {\n    const currentDate = new Date();\n    const endOfDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() + 1);\n    const millisecondsUntilEndOfDay = endOfDay - currentDate;\n    const timeoutId = setTimeout(() => {\n      setEntries(Array.from({\n        length: 15\n      }, () => ({\n        meal: '',\n        calories: '',\n        category: '',\n        favorite: false,\n        period: 'AM'\n      })));\n    }, millisecondsUntilEndOfDay);\n    return () => clearTimeout(timeoutId);\n  }, []);\n\n  // Update localStorage whenever entries change\n  useEffect(() => {\n    localStorage.setItem('dietEntries', JSON.stringify(entries));\n  }, [entries]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '750px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Diet Journal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Diet Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxHeight: '400px',\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflowX: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            width: '100%',\n            borderCollapse: 'collapse',\n            borderSpacing: '0'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  padding: '5px'\n                },\n                children: \"Meal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  padding: '5px'\n                },\n                children: \"Calories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  padding: '5px'\n                },\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  padding: '5px'\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  padding: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxHeight: 'calc(100% - 40px)',\n          overflowY: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            width: '100%',\n            borderCollapse: 'collapse',\n            borderSpacing: '0'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: entries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '5px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"meal\",\n                  value: entry.meal,\n                  onChange: event => handleEntryChange(index, event),\n                  list: \"mealSuggestions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                  id: \"mealSuggestions\",\n                  children: allMeals.map((meal, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: meal\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '5px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"calories\",\n                  value: entry.calories,\n                  maxWidth: \"10px\",\n                  onChange: event => handleEntryChange(index, event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '5px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"category\",\n                  value: entry.category,\n                  onChange: event => handleEntryChange(index, event),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 45\n                  }, this), categories.map((category, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: category,\n                    children: category\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 49\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '5px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => submitEntry(index),\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '5px'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => removeEntry(index),\n                  children: \" X \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n_s(DietJournal, \"FTSof8YSiOQQUlCnRn0BZ6Oxn5g=\");\n_c = DietJournal;\nexport default DietJournal;\nvar _c;\n$RefreshReg$(_c, \"DietJournal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DietJournal","_s","entries","setEntries","storedEntries","localStorage","getItem","JSON","parse","Array","from","length","meal","calories","category","favorite","period","allMeals","setAllMeals","categories","fetchAllMeals","response","fetch","ok","Error","data","json","meals","hits","map","hit","recipe","label","error","console","message","handleEntryChange","index","event","name","value","target","updatedEntries","selectedMeal","submitEntry","entry","dateSubmitted","Date","toLocaleDateString","timeSubmitted","toLocaleTimeString","method","headers","body","stringify","log","removeEntry","prevEntries","filter","_","i","currentDate","endOfDay","getFullYear","getMonth","getDate","millisecondsUntilEndOfDay","timeoutId","setTimeout","clearTimeout","setItem","style","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","placeholder","maxHeight","overflowY","overflowX","width","borderCollapse","borderSpacing","padding","onChange","list","id","onClick","_c","$RefreshReg$"],"sources":["/Users/spencerbrown/Development/code/phase-2/phase-2-project/src/Components/DietJournal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction DietJournal() {\n    const [entries, setEntries] = useState(() => {\n        const storedEntries = localStorage.getItem('dietEntries');\n        return storedEntries ? JSON.parse(storedEntries) : Array.from({ length: 15 }, () => ({ meal: '', calories: '', category: '', favorite: false, period: 'AM' }));\n    });\n    const [allMeals, setAllMeals] = useState([]); // State to store all meals from the API\n    const categories = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\n\n    // Fetch all meals from the API\n    useEffect(() => {\n        fetchAllMeals();\n    }, []);\n\n    const fetchAllMeals = async () => {\n        try {\n            const response = await fetch('https://api.edamam.com/api/recipes/v2?type=any&beta=true&app_id=d0e6a50c&app_key=4039c21decd06beb5d8e7382c1d3dde0%09%E2%80%94%09');\n            if (!response.ok) {\n                throw new Error('Failed to fetch meals');\n            }\n            const data = await response.json();\n            // Assuming data contains the recipes\n            const meals = data.hits.map(hit => hit.recipe.label);\n            setAllMeals(meals); // Set the retrieved meals in state\n        } catch (error) {\n            console.error('Error fetching meals:', error.message);\n        }\n    };\n\n    const handleEntryChange = (index, event) => {\n        const { name, value } = event.target;\n        let updatedEntries = [...entries];\n        if (name === \"meal\") {\n            // Find the meal label in allMeals\n            const selectedMeal = value;\n            updatedEntries[index] = { ...updatedEntries[index], [name]: value };\n            // Assuming there's no direct way to get calories from the API\n            updatedEntries[index].calories = ''; // Clear calories for now\n        } else {\n            updatedEntries[index] = { ...updatedEntries[index], [name]: value };\n        }\n        setEntries(updatedEntries);\n    };\n\n    const submitEntry = (index) => {\n        const entry = { ...entries[index] };\n        entry.dateSubmitted = new Date().toLocaleDateString(); // Current date\n        entry.timeSubmitted = new Date().toLocaleTimeString(); // Current time\n\n        try {\n            const response = fetch('http://localhost:3000/dietJournalEntries', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(entry),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to submit entry');\n            }\n\n            console.log('Entry submitted successfully');\n        } catch (error) {\n            console.error('Error submitting entry:', error.message);\n        }\n    };\n\n    const removeEntry = (index) => {\n        setEntries(prevEntries => prevEntries.filter((_, i) => i !== index));\n    };\n\n    // Clear entries at the beginning of each day\n    useEffect(() => {\n        const currentDate = new Date();\n        const endOfDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() + 1);\n        const millisecondsUntilEndOfDay = endOfDay - currentDate;\n        const timeoutId = setTimeout(() => {\n            setEntries(Array.from({ length: 15 }, () => ({ meal: '', calories: '', category: '', favorite: false, period: 'AM' })));\n        }, millisecondsUntilEndOfDay);\n        \n        return () => clearTimeout(timeoutId);\n    }, []);\n\n    // Update localStorage whenever entries change\n    useEffect(() => {\n        localStorage.setItem('dietEntries', JSON.stringify(entries));\n    }, [entries]);\n\n    return (\n        <div style={{ maxWidth: '750px' }}>\n            <h5>Diet Journal</h5>\n            <div style={{ marginBottom: '10px' }}>\n                <input type=\"text\" placeholder=\"Search...\" />\n                <button>Diet Data</button>\n            </div>\n            <div style={{ maxHeight: '400px', overflowY: 'auto' }}>\n                <div style={{ overflowX: 'auto' }}>\n                    <table style={{ width: '100%', borderCollapse: 'collapse', borderSpacing: '0' }}>\n                        <thead>\n                            <tr>\n                                <th style={{ padding: '5px' }}>Meal</th>\n                                <th style={{ padding: '5px' }}>Calories</th>\n                                <th style={{ padding: '5px' }}>Category</th>\n                                <th style={{ padding: '5px' }}>Submit</th>\n                                <th style={{ padding: '5px' }}></th>\n                            </tr>\n                        </thead>\n                    </table>\n                </div>\n                <div style={{ maxHeight: 'calc(100% - 40px)', overflowY: 'auto' }}>\n                    <table style={{ width: '100%', borderCollapse: 'collapse', borderSpacing: '0' }}>\n                        <tbody>\n                            {entries.map((entry, index) => (\n                                <tr key={index}>\n                                    <td style={{ padding: '5px'}}>\n                                        <input\n                                            type=\"text\"\n                                            name=\"meal\"\n                                            value={entry.meal}\n                                            onChange={(event) => handleEntryChange(index, event)}\n                                            list=\"mealSuggestions\"\n                                        />\n                                        {/* Display suggestions as the user types */}\n                                        <datalist id=\"mealSuggestions\">\n                                            {allMeals.map((meal, i) => (\n                                                <option key={i} value={meal} />\n                                            ))}\n                                        </datalist>\n                                    </td>\n                                    <td style={{ padding: '5px'}}>\n                                        <input\n                                            type=\"number\"\n                                            name=\"calories\"\n                                            value={entry.calories}\n                                            maxWidth='10px'\n                                            onChange={(event) => handleEntryChange(index, event)}\n                                        />\n                                    </td>\n                                    <td style={{ padding: '5px'}}>\n                                        <select\n                                            name=\"category\"\n                                            value={entry.category}\n                                            onChange={(event) => handleEntryChange(index, event)}\n                                        >\n                                            <option value=\"\">Select Category</option>\n                                            {categories.map((category, i) => (\n                                                <option key={i} value={category}>\n                                                    {category}\n                                                </option>\n                                            ))}\n                                        </select>\n                                    </td>\n                                                             \n                                    <td style={{ padding: '5px'}}>\n                                        <button onClick={() => submitEntry(index)}>Submit</button>\n                                    </td>\n                                    <td style={{ padding: '5px'}}>\n                                        <button onClick={() => removeEntry(index)}> X </button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default DietJournal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}