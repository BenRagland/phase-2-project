{"ast":null,"code":"var _jsxFileName = \"/Users/spencerbrown/Development/code/phase-2/phase-2-project/src/Components/DietJournal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DietJournal() {\n  _s();\n  const [entries, setEntries] = useState([{\n    meal: '',\n    calories: '',\n    category: ''\n  }]);\n  const [predefinedMeals, setPredefinedMeals] = useState([]);\n  useEffect(() => {\n    // Fetch predefined meals from your API endpoint\n    fetch('your_api_endpoint').then(response => response.json()).then(data => {\n      // Assuming data is an array of meal names\n      setPredefinedMeals(data);\n    }).catch(error => console.error('Error fetching predefined meals:', error));\n  }, []);\n  const handleEntryChange = (index, event) => {\n    const {\n      name,\n      value\n    } = event.target;\n    const newEntries = [...entries];\n    newEntries[index][name] = value;\n    setEntries(newEntries);\n  };\n  const addEntry = () => {\n    setEntries([...entries, {\n      meal: '',\n      calories: '',\n      category: ''\n    }]);\n  };\n  const removeEntry = index => {\n    const newEntries = [...entries];\n    newEntries.splice(index, 1);\n    setEntries(newEntries);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Diet Journal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), entries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"meal\",\n        value: entry.meal,\n        onChange: event => handleEntryChange(index, event),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Meal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), predefinedMeals.map((meal, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: meal,\n          children: meal\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"calories\",\n        value: entry.calories,\n        onChange: event => handleEntryChange(index, event),\n        placeholder: \"Calories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"category\",\n        value: entry.category,\n        onChange: event => handleEntryChange(index, event),\n        placeholder: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeEntry(index),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addEntry,\n      children: \"Add Entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(DietJournal, \"gY8nTqBJhsF8OK795elRmpp+0rc=\");\n_c = DietJournal;\nexport default DietJournal;\nvar _c;\n$RefreshReg$(_c, \"DietJournal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DietJournal","_s","entries","setEntries","meal","calories","category","predefinedMeals","setPredefinedMeals","fetch","then","response","json","data","catch","error","console","handleEntryChange","index","event","name","value","target","newEntries","addEntry","removeEntry","splice","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","onChange","i","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/spencerbrown/Development/code/phase-2/phase-2-project/src/Components/DietJournal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction DietJournal() {\n    const [entries, setEntries] = useState([{ meal: '', calories: '', category: '' }]);\n    const [predefinedMeals, setPredefinedMeals] = useState([]);\n\n    useEffect(() => {\n        // Fetch predefined meals from your API endpoint\n        fetch('your_api_endpoint')\n            .then(response => response.json())\n            .then(data => {\n                // Assuming data is an array of meal names\n                setPredefinedMeals(data);\n            })\n            .catch(error => console.error('Error fetching predefined meals:', error));\n    }, []);\n\n    const handleEntryChange = (index, event) => {\n        const { name, value } = event.target;\n        const newEntries = [...entries];\n        newEntries[index][name] = value;\n        setEntries(newEntries);\n    };\n\n    const addEntry = () => {\n        setEntries([...entries, { meal: '', calories: '', category: '' }]);\n    };\n\n    const removeEntry = (index) => {\n        const newEntries = [...entries];\n        newEntries.splice(index, 1);\n        setEntries(newEntries);\n    };\n\n    return (\n        <div>\n            <h5>Diet Journal</h5>\n            {entries.map((entry, index) => (\n                <div key={index}>\n                    <select\n                        name=\"meal\"\n                        value={entry.meal}\n                        onChange={(event) => handleEntryChange(index, event)}\n                    >\n                        <option value=\"\">Select Meal</option>\n                        {predefinedMeals.map((meal, i) => (\n                            <option key={i} value={meal}>\n                                {meal}\n                            </option>\n                        ))}\n                    </select>\n                    <input\n                        type=\"text\"\n                        name=\"calories\"\n                        value={entry.calories}\n                        onChange={(event) => handleEntryChange(index, event)}\n                        placeholder=\"Calories\"\n                    />\n                    <input\n                        type=\"text\"\n                        name=\"category\"\n                        value={entry.category}\n                        onChange={(event) => handleEntryChange(index, event)}\n                        placeholder=\"Category\"\n                    />\n                    <button onClick={() => removeEntry(index)}>Remove</button>\n                </div>\n            ))}\n            <button onClick={addEntry}>Add Entry</button>\n        </div>\n    );\n}\n\nexport default DietJournal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}