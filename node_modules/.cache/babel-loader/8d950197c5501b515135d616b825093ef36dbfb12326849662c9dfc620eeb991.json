{"ast":null,"code":"var _jsxFileName = \"/Users/spencerbrown/Development/code/phase-2/phase-2-project/src/Components/DietJournal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DietJournal() {\n  _s();\n  const [entries, setEntries] = useState(() => {\n    const storedEntries = localStorage.getItem('dietEntries');\n    return storedEntries ? JSON.parse(storedEntries) : Array.from({\n      length: 15\n    }, () => ({\n      meal: '',\n      calories: '',\n      category: '',\n      favorite: false,\n      period: 'AM',\n      submitted: false\n    }));\n  });\n  const [allMeals, setAllMeals] = useState([]); // State to store all meals from the API\n  const categories = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\n\n  // // Fetch all meals from the API\n  // useEffect(() => {\n  //     fetchAllMeals();\n  // }, []);\n\n  // const fetchAllMeals = async () => {\n  //     try {\n  //         const response = await fetch('https://api.edamam.com/api/recipes/v2?type=any&beta=true&app_id=d0e6a50c&app_key=4039c21decd06beb5d8e7382c1d3dde0%09%E2%80%94%09');\n  //         if (!response.ok) {\n  //             throw new Error('Failed to fetch meals');\n  //         }\n  //         const data = await response.json();\n  //         // Assuming data contains the recipes\n  //         const meals = data.hits.map(hit => hit.recipe.label);\n  //         setAllMeals(meals); // Set the retrieved meals in state\n  //     } catch (error) {\n  //         console.error('Error fetching meals:', error.message);\n  //     }\n  // };\n\n  const handleEntryChange = (index, event) => {\n    const {\n      name,\n      value\n    } = event.target;\n    let updatedEntries = [...entries];\n    if (name === \"meal\") {\n      // Find the meal label in allMeals\n      const selectedMeal = value;\n      updatedEntries[index] = {\n        ...updatedEntries[index],\n        [name]: value\n      };\n      // Assuming there's no direct way to get calories from the API\n      updatedEntries[index].calories = ''; // Clear calories for now\n    } else {\n      updatedEntries[index] = {\n        ...updatedEntries[index],\n        [name]: value\n      };\n    }\n    setEntries(updatedEntries);\n  };\n  const handleSubmitEntry = async index => {\n    const entry = {\n      ...entries[index]\n    };\n    entry.dateSubmitted = new Date().toLocaleDateString(); // Current date\n    entry.timeSubmitted = new Date().toLocaleTimeString(); // Current time\n\n    try {\n      const response = await fetch('http://localhost:3000/dietJournalEntries', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(entry)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to submit entry');\n      }\n      console.log('Entry submitted successfully');\n      // Mark the entry as submitted\n      setEntries(prevEntries => {\n        const updatedEntries = [...prevEntries];\n        updatedEntries[index].submitted = true;\n        return updatedEntries;\n      });\n    } catch (error) {\n      console.error('Error submitting entry:', error.message);\n    }\n  };\n  const removeEntry = index => {\n    setEntries(prevEntries => prevEntries.filter((_, i) => i !== index));\n  };\n\n  // Clear entries at the beginning of each day\n  useEffect(() => {\n    const currentDate = new Date();\n    const endOfDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() + 1);\n    const millisecondsUntilEndOfDay = endOfDay - currentDate;\n    const timeoutId = setTimeout(() => {\n      setEntries(Array.from({\n        length: 15\n      }, () => ({\n        meal: '',\n        calories: '',\n        category: '',\n        favorite: false,\n        period: 'AM',\n        submitted: false\n      })));\n    }, millisecondsUntilEndOfDay);\n    return () => clearTimeout(timeoutId);\n  }, []);\n\n  // Update localStorage whenever entries change\n  useEffect(() => {\n    localStorage.setItem('dietEntries', JSON.stringify(entries));\n  }, [entries]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '750px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Diet Journal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxHeight: '250px',\n        overflowY: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse',\n          borderSpacing: '0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '5px'\n              },\n              children: \"Meal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '5px'\n              },\n              children: \"Calories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '5px'\n              },\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: entries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '5px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"meal\",\n                value: entry.meal,\n                onChange: event => handleEntryChange(index, event),\n                list: \"mealSuggestions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                id: \"mealSuggestions\",\n                children: allMeals.map((meal, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: meal\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '5px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"calories\",\n                value: entry.calories,\n                onChange: event => handleEntryChange(index, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '5px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"category\",\n                value: entry.category,\n                onChange: event => handleEntryChange(index, event),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 41\n                }, this), categories.map((category, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: category,\n                  children: category\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 45\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '5px'\n              },\n              children: [entry.submitted ? \"Submitted\" : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleSubmitEntry(index),\n                disabled: entry.submitted,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 66\n              }, this), \"                                \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '5px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeEntry(index),\n                children: \" X \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" Diet Data \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n_s(DietJournal, \"TQp1qpdmJOkd+j7Y7ZDzFzXvJGE=\");\n_c = DietJournal;\nexport default DietJournal;\nvar _c;\n$RefreshReg$(_c, \"DietJournal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DietJournal","_s","entries","setEntries","storedEntries","localStorage","getItem","JSON","parse","Array","from","length","meal","calories","category","favorite","period","submitted","allMeals","setAllMeals","categories","handleEntryChange","index","event","name","value","target","updatedEntries","selectedMeal","handleSubmitEntry","entry","dateSubmitted","Date","toLocaleDateString","timeSubmitted","toLocaleTimeString","response","fetch","method","headers","body","stringify","ok","Error","console","log","prevEntries","error","message","removeEntry","filter","_","i","currentDate","endOfDay","getFullYear","getMonth","getDate","millisecondsUntilEndOfDay","timeoutId","setTimeout","clearTimeout","setItem","style","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","maxHeight","overflowY","width","borderCollapse","borderSpacing","padding","map","type","onChange","list","id","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/spencerbrown/Development/code/phase-2/phase-2-project/src/Components/DietJournal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction DietJournal() {\n    const [entries, setEntries] = useState(() => {\n        const storedEntries = localStorage.getItem('dietEntries');\n        return storedEntries ? JSON.parse(storedEntries) : Array.from({ length: 15 }, () => ({ meal: '', calories: '', category: '', favorite: false, period: 'AM', submitted: false }));\n    });\n    const [allMeals, setAllMeals] = useState([]); // State to store all meals from the API\n    const categories = ['Breakfast', 'Lunch', 'Dinner', 'Snack'];\n\n    // // Fetch all meals from the API\n    // useEffect(() => {\n    //     fetchAllMeals();\n    // }, []);\n\n    // const fetchAllMeals = async () => {\n    //     try {\n    //         const response = await fetch('https://api.edamam.com/api/recipes/v2?type=any&beta=true&app_id=d0e6a50c&app_key=4039c21decd06beb5d8e7382c1d3dde0%09%E2%80%94%09');\n    //         if (!response.ok) {\n    //             throw new Error('Failed to fetch meals');\n    //         }\n    //         const data = await response.json();\n    //         // Assuming data contains the recipes\n    //         const meals = data.hits.map(hit => hit.recipe.label);\n    //         setAllMeals(meals); // Set the retrieved meals in state\n    //     } catch (error) {\n    //         console.error('Error fetching meals:', error.message);\n    //     }\n    // };\n\n    const handleEntryChange = (index, event) => {\n        const { name, value } = event.target;\n        let updatedEntries = [...entries];\n        if (name === \"meal\") {\n            // Find the meal label in allMeals\n            const selectedMeal = value;\n            updatedEntries[index] = { ...updatedEntries[index], [name]: value };\n            // Assuming there's no direct way to get calories from the API\n            updatedEntries[index].calories = ''; // Clear calories for now\n        } else {\n            updatedEntries[index] = { ...updatedEntries[index], [name]: value };\n        }\n        setEntries(updatedEntries);\n    };\n\n    const handleSubmitEntry = async (index) => {\n        const entry = { ...entries[index] };\n        entry.dateSubmitted = new Date().toLocaleDateString(); // Current date\n        entry.timeSubmitted = new Date().toLocaleTimeString(); // Current time\n    \n        try {\n            const response = await fetch('http://localhost:3000/dietJournalEntries', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(entry),\n            });\n    \n            if (!response.ok) {\n                throw new Error('Failed to submit entry');\n            }\n    \n            console.log('Entry submitted successfully');\n            // Mark the entry as submitted\n            setEntries(prevEntries => {\n                const updatedEntries = [...prevEntries];\n                updatedEntries[index].submitted = true;\n                return updatedEntries;\n            });\n        } catch (error) {\n            console.error('Error submitting entry:', error.message);\n        }\n    };\n\n    const removeEntry = (index) => {\n        setEntries(prevEntries => prevEntries.filter((_, i) => i !== index));\n    };\n\n    // Clear entries at the beginning of each day\n    useEffect(() => {\n        const currentDate = new Date();\n        const endOfDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() + 1);\n        const millisecondsUntilEndOfDay = endOfDay - currentDate;\n        const timeoutId = setTimeout(() => {\n            setEntries(Array.from({ length: 15 }, () => ({ meal: '', calories: '', category: '', favorite: false, period: 'AM', submitted: false })));\n        }, millisecondsUntilEndOfDay);\n        \n        return () => clearTimeout(timeoutId);\n    }, []);\n\n    // Update localStorage whenever entries change\n    useEffect(() => {\n        localStorage.setItem('dietEntries', JSON.stringify(entries));\n    }, [entries]);\n\n    return (\n        <div style={{ maxWidth: '750px' }}>\n            <h5>Diet Journal</h5>\n            <div style={{ marginBottom: '10px' }}>\n            </div>\n            <div style={{ maxHeight: '250px', overflowY: 'auto' }}>\n                <table style={{ width: '100%', borderCollapse: 'collapse', borderSpacing: '0' }}>\n                    <thead>\n                        <tr>\n                            <th style={{ padding: '5px' }}>Meal</th>\n                            <th style={{ padding: '5px' }}>Calories</th>\n                            <th style={{ padding: '5px' }}>Category</th>\n                            <th style={{ padding: '5px' }}></th>\n                            <th style={{ padding: '5px' }}></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {entries.map((entry, index) => (\n                            <tr key={index}>\n                                <td style={{ padding: '5px'}}>\n                                    <input\n                                        type=\"text\"\n                                        name=\"meal\"\n                                        value={entry.meal}\n                                        onChange={(event) => handleEntryChange(index, event)}\n                                        list=\"mealSuggestions\"\n                                    />\n                                    {/* Display suggestions as the user types */}\n                                    <datalist id=\"mealSuggestions\">\n                                        {allMeals.map((meal, i) => (\n                                            <option key={i} value={meal} />\n                                        ))}\n                                    </datalist>\n                                </td>\n                                <td style={{ padding: '5px'}}>\n                                    <input\n                                        type=\"number\"\n                                        name=\"calories\"\n                                        value={entry.calories}\n                                        onChange={(event) => handleEntryChange(index, event)}\n                                    />\n                                </td>\n                                <td style={{ padding: '5px'}}>\n                                    <select\n                                        name=\"category\"\n                                        value={entry.category}\n                                        onChange={(event) => handleEntryChange(index, event)}\n                                    >\n                                        <option value=\"\">Select Category</option>\n                                        {categories.map((category, i) => (\n                                            <option key={i} value={category}>\n                                                {category}\n                                            </option>\n                                        ))}\n                                    </select>\n                                </td>\n                                                         \n                                <td style={{ padding: '5px'}}>\n                                {entry.submitted ? \"Submitted\" : <button onClick={() => handleSubmitEntry(index)} disabled={entry.submitted}>Submit</button>}                                </td>\n                                <td style={{ padding: '5px'}}>\n                                    <button onClick={() => removeEntry(index)}> X </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n              <button> Diet Data </button>                              \n        </div>\n    );\n}\n\nexport default DietJournal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}